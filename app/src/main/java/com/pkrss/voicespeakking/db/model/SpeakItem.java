package com.pkrss.voicespeakking.db.model;

import com.pkrss.voicespeakking.db.dao.DaoSession;
import de.greenrobot.dao.DaoException;

import com.pkrss.voicespeakking.db.dao.SpeakItemDao;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END
/**
 * Entity mapped to table "SPEAK_ITEM".
 */
public class SpeakItem {

    private Long id;
    private Integer lastPos;
    private String brief;
    private String content;
    private java.util.Date createTime;
    private java.util.Date updateTime;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient SpeakItemDao myDao;


    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    public SpeakItem() {
    }

    public SpeakItem(Long id) {
        this.id = id;
    }

    public SpeakItem(Long id, Integer lastPos, String brief, String content, java.util.Date createTime, java.util.Date updateTime) {
        this.id = id;
        this.lastPos = lastPos;
        this.brief = brief;
        this.content = content;
        this.createTime = createTime;
        this.updateTime = updateTime;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getSpeakItemDao() : null;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Integer getLastPos() {
        return lastPos;
    }

    public void setLastPos(Integer lastPos) {
        this.lastPos = lastPos;
    }

    public String getBrief() {
        return brief;
    }

    public void setBrief(String brief) {
        this.brief = brief;
    }

    public String getContent() {
        return content;
    }

    public void setContent(String content) {
        this.content = content;
    }

    public java.util.Date getCreateTime() {
        return createTime;
    }

    public void setCreateTime(java.util.Date createTime) {
        this.createTime = createTime;
    }

    public java.util.Date getUpdateTime() {
        return updateTime;
    }

    public void setUpdateTime(java.util.Date updateTime) {
        this.updateTime = updateTime;
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

    // KEEP METHODS - put your custom methods here
    // KEEP METHODS END

}
